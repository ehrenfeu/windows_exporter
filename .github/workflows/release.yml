name: Releases

# Trigger on releases.
on:
  push:
    branches:
      - master
  pull_request:
  release:
    types:
      - published
      - edited

permissions:
  contents: write
  packages: write

env:
  VERSION_PROMU: '0.14.0'
  # https://github.com/containerd/containerd/releases/latest
  VERSION_CONTAINERD: '1.7.22'
  # https://github.com/moby/buildkit/releases/latest
  VERSION_BUILDKIT: '0.16.0'
  # https://github.com/docker/buildx/releases/latest
  VERSION_BUILDX: '0.17.1'

jobs:
  build:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      # https://github.com/pl4nty/Windows-Containers/blob/Main/helpful_tools/Install-BuildKit-GitHubActions/workflow.yaml
      - name: Setup containerd
        run: |
          curl.exe -sSfL https://github.com/containerd/containerd/releases/download/v${{ env.VERSION_CONTAINERD }}/containerd-${{ env.VERSION_CONTAINERD }}-windows-amd64.tar.gz -o containerd.tar.gz
          tar.exe xvf containerd.tar.gz
          bin\containerd.exe config default | Out-File config.toml -Encoding ascii
          ((Get-Content -path config.toml -Raw) -replace 'C:\\\\ProgramData\\\\containerd', ((Get-Location) -replace '\\', '\\')) | Set-Content -Path config.toml
          ((Get-Content -path config.toml -Raw) -replace 'C:\\\\Program Files\\\\containerd', ((Get-Location) -replace '\\', '\\')) | Set-Content -Path config.toml
          .\bin\containerd.exe  --help

          .\bin\containerd.exe --register-service -c .\config.toml
          Start-Service containerd
      - name: Setup BuildKit
        run: |
          curl.exe -sSfL https://github.com/moby/buildkit/releases/download/v${{ env.VERSION_BUILDKIT }}/buildkit-v${{ env.VERSION_BUILDKIT }}.windows-amd64.tar.gz -o buildkit.tar.gz
          tar.exe xvf buildkit.tar.gz

          mkdir C:\ProgramData\buildkitd\
          mkdir C:\ProgramData\buildkitd\.buildstate\

          .\bin\buildkitd.exe --register-service --debug --containerd-worker=true --service-name buildkitd
          Start-Service buildkitd
      - name: Setup Docker Buildx
        run: |
          curl.exe -sSfL https://github.com/docker/buildx/releases/download/v${{ env.VERSION_BUILDX }}/buildx-v${{ env.VERSION_BUILDX }}.windows-amd64.exe -o $env:ProgramData\Docker\cli-plugins\docker-buildx.exe
      - uses: docker/setup-buildx-action@v3
        with:
          driver: remote
          endpoint: npipe:////./pipe/buildkitd

      - name: Install WiX
        run: dotnet tool install --global wix

      - name: Install WiX extensions
        run: |
          wix extension add -g WixToolset.Util.wixext
          wix extension add -g WixToolset.Ui.wixext
          wix extension add -g WixToolset.Firewall.wixext

      - name: Install Build deps
        run: |
          Invoke-WebRequest -Uri https://github.com/prometheus/promu/releases/download/v$($Env:VERSION_PROMU)/promu-$($Env:VERSION_PROMU).windows-amd64.zip -OutFile promu-$($Env:VERSION_PROMU).windows-amd64.zip
          Expand-Archive -Path promu-$($Env:VERSION_PROMU).windows-amd64.zip -DestinationPath .
          Copy-Item -Path promu-$($Env:VERSION_PROMU).windows-amd64\promu.exe -Destination "$(go env GOPATH)\bin"

          # GOPATH\bin dir must be added to PATH else the `promu` commands won't be found
          echo "$(go env GOPATH)\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Build
        run: |
          $ErrorActionPreference = "Stop"

          $Version = git describe --tags --always
          $Version = $Version -replace 'v', ''
          # '+' symbols are invalid characters in image tags
          $Version = $Version -replace '\+', '_'
          $Version | Set-Content VERSION -PassThru

          make build-all

          # GH requires all files to have different names, so add version/arch to differentiate
          foreach($Arch in "amd64", "arm64") {
            Move-Item output\$Arch\windows_exporter.exe output\windows_exporter-$Version-$Arch.exe
          }

          Get-ChildItem -Path output

      - name: Build Release Artifacts
        run: |
          $ErrorActionPreference = "Stop"
          $Version = Get-Content VERSION

          foreach($Arch in "amd64", "arm64") {
            Write-Host "Building windows_exporter $Version msi for $Arch"
            .\installer\build.ps1 -PathToExecutable .\output\windows_exporter-$Version-$Arch.exe -Version $Version -Arch "$Arch"
          }

          Move-Item installer\*.msi output\
          Get-ChildItem -Path output\

          promu checksum output\

      - run: |
          docker buildx build --sbom=false --provenance=false --no-cache --push --build-arg=BASE=mcr.microsoft.com/oss/kubernetes/windows-host-process-containers-base-image:v1.0.0 -f Dockerfile -t ghcr.io/prometheus-community/windows-exporter:test-hostprocess .

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows_exporter_binaries
          path: |
            output\windows_exporter-*.exe
            output\windows_exporter-*.msi

      - name: Build Docker Artifacts
        run: make build-all
        env:
          VERSION: >-
            ${{
              startsWith(github.ref, 'refs/tags/') && 'latest' ||
              (
                github.event_name == 'pull_request' && format('pr-{0}', github.event.number) || github.ref_name
              )
            }}

      - name: Login to Docker Hub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_LOGIN }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      #- name: Login to quay.io
      #  if: ${{ github.event_name != 'pull_request' }}
      #  uses: docker/login-action@v3
      #  with:
      #    registry: quay.io
      #    username: 'robot'
      #    password: ${{ secrets.QUAY_IO_API_TOKEN }}

      - name: Login to GitHub container registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push Latest image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ startsWith(github.ref, 'refs/tags/') && 'latest' || github.ref_name }}
        run: |
          make push-all

      - name: Release
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $TagName = $env:GITHUB_REF -replace 'refs/tags/', ''
          Get-ChildItem -Path output\* -Include @('windows_exporter*.msi', 'windows_exporter*.exe', 'sha256sums.txt') | Foreach-Object {gh release upload $TagName $_}
          make push-all
